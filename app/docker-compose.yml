services:

#DATABASE
  postgres:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_USER: django_user
      POSTGRES_PASSWORD: django_password
      POSTGRES_DB: django_db
    volumes:
      - ./DB:/var/lib/postgresql/data
    networks:
      - db_network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "django_db", "-U", "django_user" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
      #start_interval: 1s
  reverse_proxy:
       image: nginx:latest
       container_name: reverse_proxy
       depends_on:
         - main_service
         - frontend_service
       volumes:
         - ./certs:/etc/nginx/certs:ro        # Mount certificates
         - ./nginx_proxy/nginx.conf:/etc/nginx/nginx.conf:ro
       ports:
         - "443:443"  # HTTPS
         - "80:80"    # HTTP (optional)
       networks:
         - django_network
##############################################
## DJANGO SERVICES WITH DATABASE CONNECTION ##
  user_service:
    build:
      context: ./django_service/user_service
      dockerfile: Dockerfile
    container_name: user_service
    command: sh -c "python manage.py migrate && python manage.py grpcrunaioserver --dev"
    volumes:
      - ./django_service/user_service:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - django_network
      - db_network
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db
    healthcheck:
      test: ["CMD-SHELL", "python manage.py showmigrations | grep '\\[ \\]' && exit 1 || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
      #start_interval: 1s: 1s

##############################################
  stat_service:
    build:
      context: ./django_service/stat_service
      dockerfile: Dockerfile
    container_name: stat_service
    command: sh -c "python manage.py migrate && python manage.py grpcrunaioserver --dev"
    volumes:
      - ./django_service/stat_service:/usr/src/app
    depends_on:
      postgres:
        condition: service_started
      user_service:
        condition: service_started
    networks:
      - django_network
      - db_network
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db
##############################################
  game_service:
    build:
      context: ./django_service/game_service
      dockerfile: Dockerfile
    container_name: game_service
    command: sh -c "python manage.py migrate && python manage.py grpcrunaioserver --dev"
    volumes:
      - ./django_service/game_service:/usr/src/app
    depends_on:
      postgres:
        condition: service_started
      user_service:
        condition: service_started
    networks:
      - django_network
      - db_network
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db
    healthcheck:
      test: ["CMD-SHELL", "python manage.py showmigrations | grep '\\[ \\]' && exit 1 || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
      #start_interval: 1s
##############################################
  chat_service:
    build:
      context: ./django_service/chat_service
      dockerfile: Dockerfile
    container_name: chat_service
    command: sh -c "python manage.py migrate && python manage.py grpcrunaioserver --dev"
    volumes:
      - ./django_service/chat_service:/usr/src/app
    depends_on:
      postgres:
        condition: service_started
      user_service:
        condition: service_started
    networks:
      - django_network
      - db_network
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db
##############################################
  auth_service:
    build:
      context: ./django_service/auth_service
      dockerfile: Dockerfile
    container_name: auth_service
    command: sh -c "python manage.py migrate && python manage.py grpcrunaioserver --dev"
    volumes:
      - ./django_service/auth_service:/usr/src/app
    depends_on:
      postgres:
        condition: service_started
      user_service:
        condition: service_started
    networks:
      - django_network
      - db_network
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "python manage.py showmigrations | grep '\\[ \\]' && exit 1 || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
      #start_interval: 1s: 1s
##############################################
  admin_service:
    build:
      context: ./django_service/auth_service
      dockerfile: Dockerfile
    container_name: admin_service
    command: sh -c "python manage.py migrate && python manage.py grpcrunaioserver --dev"
    volumes:
      - ./django_service/admin_service:/usr/src/app
    depends_on:
      postgres:
        condition: service_started
      user_service:
        condition: service_started
    networks:
      - django_network
      - db_network
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db
## DJANGO SERVICES WITH DATABASE CONNECTION ##
##############################################

##########################################
## DJANGO/PONG SERVICES EXPOSED TO THE USER ##
  main_service:
      build:
        context: ./django_service/main_service
        dockerfile: Dockerfile
      container_name: main_service
      command: sh -c "python manage.py collectstatic --noinput && daphne -b 0.0.0.0 -p 8000 main_service.asgi:application"
      volumes:
        - ./django_service/main_service:/usr/src/app
      depends_on:
        auth_service:
          condition: service_started
      networks:
        - django_network
      environment:
        - DEBUG=True
        - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db
##########################################
  frontend_service:
    build:
      context: ./django_service/frontend_service
      dockerfile: Dockerfile
    container_name: frontend_service
    command: python manage.py runserver 0.0.0.0:80
    volumes:
      - ./django_service/frontend_service:/usr/src/app
    networks:
      - django_network
    env_file:
      - .env
##########################################
  pong_service:
    build:
      context: ./pong_service
      dockerfile: Dockerfile
    container_name: pong_service
    depends_on:
      game_service:
        condition: service_started
      auth_service:
        condition: service_started
    networks:
      - django_network
    ports:
      - '4000:4000'
## DJANGO/PONG SERVICES EXPOSED TO THE USER ##
##########################################

networks:
  django_network:
  db_network:

