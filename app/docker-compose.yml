services:
  postgres:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_USER: django_user
      POSTGRES_PASSWORD: django_password
      POSTGRES_DB: django_db
    volumes:
      - ./DB:/var/lib/postgresql/data
    networks:
      - db_network
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "django_db", "-U", "django_user" ]
      interval: 5s
      timeout: 5s
      retries: 5

  main_service:
      build:
        context: ./django_service/main_service
        dockerfile: Dockerfile
      container_name: main_service
      command: python manage.py runserver 0.0.0.0:8000
      ports:
        - '8001:8000'
      volumes:
        - ./django_service/main_service:/usr/src/app
      networks:
        - django_network
      environment:
        - DEBUG=True
        - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db
      healthcheck:
        test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
        interval: 30s
        timeout: 10s
        retries: 5
        start_period: 30s

  user_service:
    build:
      context: ./django_service/user_service
      dockerfile: Dockerfile
    container_name: user_service
    command: sh -c "python manage.py migrate && python manage.py grpcrunserver --dev"
    volumes:
      - ./django_service/user_service:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - django_network
      - db_network
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db

  stat_service:
    build:
      context: ./django_service/stat_service
      dockerfile: Dockerfile
    container_name: stat_service
    command: sh -c "python manage.py migrate && python manage.py grpcrunserver --dev"
    volumes:
      - ./django_service/stat_service:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - django_network
      - db_network
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db

  game_service:
    build:
      context: ./django_service/game_service
      dockerfile: Dockerfile
    container_name: game_service
    command: sh -c "python manage.py migrate && python manage.py grpcrunserver --dev"
    volumes:
      - ./django_service/game_service:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - django_network
      - db_network
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db

  chat_service:
    build:
      context: ./django_service/chat_service
      dockerfile: Dockerfile
    container_name: chat_service
    command: sh -c "python manage.py migrate && python manage.py grpcrunserver --dev"
    volumes:
      - ./django_service/chat_service:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - django_network
      - db_network
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db

  auth_service:
    build:
      context: ./django_service/auth_service
      dockerfile: Dockerfile
    container_name: auth_service
    command: sh -c "python manage.py migrate && python manage.py grpcrunserver --dev"
    volumes:
      - ./django_service/auth_service:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - django_network
      - db_network
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db
    # ports:
    #   - 50051:50051
  admin_service:
    build:
      context: ./django_service/auth_service
      dockerfile: Dockerfile
    container_name: admin_service
    command: sh -c "python manage.py migrate && python manage.py grpcrunserver --dev"
    volumes:
      - ./django_service/admin_service:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - django_network
      - db_network
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://django_user:django_password@postgres_db:5432/django_db

  frontend_service:
    build:
      context: ./django_service/frontend_service
      dockerfile: Dockerfile
    container_name: frontend_service
    command: gunicorn --bind 0.0.0.0:80 frontend_service.wsgi:application
    volumes:
      - ./django_service/frontend_service:/usr/src/app
    networks:
      - django_network
    ports:
      - '80:80'



networks:
  django_network:
  db_network:
