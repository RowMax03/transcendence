// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v3.21.12
// source: grpc/protos/game.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message to define a Game
type Game struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	State         string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`                                         // State of the game
	PointsPlayerA int32                  `protobuf:"varint,3,opt,name=points_player_a,json=pointsPlayerA,proto3" json:"points_player_a,omitempty"` // Points for player A
	PointsPlayerB int32                  `protobuf:"varint,4,opt,name=points_player_b,json=pointsPlayerB,proto3" json:"points_player_b,omitempty"` // Points for player B
	PlayerAId     int32                  `protobuf:"varint,5,opt,name=player_a_id,json=playerAId,proto3" json:"player_a_id,omitempty"`             // FK to User for Player A
	PlayerBId     int32                  `protobuf:"varint,6,opt,name=player_b_id,json=playerBId,proto3" json:"player_b_id,omitempty"`             // FK to User for Player B
	Finished      bool                   `protobuf:"varint,7,opt,name=finished,proto3" json:"finished,omitempty"`                                  // Whether the game is finished
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                // Timestamp of game creation
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                // Timestamp of last update
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Game) Reset() {
	*x = Game{}
	mi := &file_grpc_protos_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_grpc_protos_game_proto_rawDescGZIP(), []int{0}
}

func (x *Game) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Game) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Game) GetPointsPlayerA() int32 {
	if x != nil {
		return x.PointsPlayerA
	}
	return 0
}

func (x *Game) GetPointsPlayerB() int32 {
	if x != nil {
		return x.PointsPlayerB
	}
	return 0
}

func (x *Game) GetPlayerAId() int32 {
	if x != nil {
		return x.PlayerAId
	}
	return 0
}

func (x *Game) GetPlayerBId() int32 {
	if x != nil {
		return x.PlayerBId
	}
	return 0
}

func (x *Game) GetFinished() bool {
	if x != nil {
		return x.Finished
	}
	return false
}

func (x *Game) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Game) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GameReadyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        int32                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"` // ID of the game to track readiness
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameReadyRequest) Reset() {
	*x = GameReadyRequest{}
	mi := &file_grpc_protos_game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameReadyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameReadyRequest) ProtoMessage() {}

func (x *GameReadyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameReadyRequest.ProtoReflect.Descriptor instead.
func (*GameReadyRequest) Descriptor() ([]byte, []int) {
	return file_grpc_protos_game_proto_rawDescGZIP(), []int{1}
}

func (x *GameReadyRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

// Request to get a specific game by ID
type GetGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        int32                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameRequest) Reset() {
	*x = GetGameRequest{}
	mi := &file_grpc_protos_game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameRequest) ProtoMessage() {}

func (x *GetGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameRequest.ProtoReflect.Descriptor instead.
func (*GetGameRequest) Descriptor() ([]byte, []int) {
	return file_grpc_protos_game_proto_rawDescGZIP(), []int{2}
}

func (x *GetGameRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

// Request to get an on going game by user
type GetOnGoingGameByUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOnGoingGameByUserRequest) Reset() {
	*x = GetOnGoingGameByUserRequest{}
	mi := &file_grpc_protos_game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOnGoingGameByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnGoingGameByUserRequest) ProtoMessage() {}

func (x *GetOnGoingGameByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnGoingGameByUserRequest.ProtoReflect.Descriptor instead.
func (*GetOnGoingGameByUserRequest) Descriptor() ([]byte, []int) {
	return file_grpc_protos_game_proto_rawDescGZIP(), []int{3}
}

func (x *GetOnGoingGameByUserRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Request to get ongoing games (not finished)
type GetOngoingGamesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOngoingGamesRequest) Reset() {
	*x = GetOngoingGamesRequest{}
	mi := &file_grpc_protos_game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOngoingGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOngoingGamesRequest) ProtoMessage() {}

func (x *GetOngoingGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOngoingGamesRequest.ProtoReflect.Descriptor instead.
func (*GetOngoingGamesRequest) Descriptor() ([]byte, []int) {
	return file_grpc_protos_game_proto_rawDescGZIP(), []int{4}
}

// Response containing a list of ongoing games
type GetOngoingGamesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Games         []*Game                `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOngoingGamesResponse) Reset() {
	*x = GetOngoingGamesResponse{}
	mi := &file_grpc_protos_game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOngoingGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOngoingGamesResponse) ProtoMessage() {}

func (x *GetOngoingGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOngoingGamesResponse.ProtoReflect.Descriptor instead.
func (*GetOngoingGamesResponse) Descriptor() ([]byte, []int) {
	return file_grpc_protos_game_proto_rawDescGZIP(), []int{5}
}

func (x *GetOngoingGamesResponse) GetGames() []*Game {
	if x != nil {
		return x.Games
	}
	return nil
}

// Request to create a new game
type CreateGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int32                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGameRequest) Reset() {
	*x = CreateGameRequest{}
	mi := &file_grpc_protos_game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameRequest) ProtoMessage() {}

func (x *CreateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameRequest.ProtoReflect.Descriptor instead.
func (*CreateGameRequest) Descriptor() ([]byte, []int) {
	return file_grpc_protos_game_proto_rawDescGZIP(), []int{6}
}

func (x *CreateGameRequest) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type CreateFriendGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerB       int32                  `protobuf:"varint,1,opt,name=player_b,json=playerB,proto3" json:"player_b,omitempty"`
	PlayerA       int32                  `protobuf:"varint,2,opt,name=player_a,json=playerA,proto3" json:"player_a,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFriendGameRequest) Reset() {
	*x = CreateFriendGameRequest{}
	mi := &file_grpc_protos_game_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFriendGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFriendGameRequest) ProtoMessage() {}

func (x *CreateFriendGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_game_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFriendGameRequest.ProtoReflect.Descriptor instead.
func (*CreateFriendGameRequest) Descriptor() ([]byte, []int) {
	return file_grpc_protos_game_proto_rawDescGZIP(), []int{7}
}

func (x *CreateFriendGameRequest) GetPlayerB() int32 {
	if x != nil {
		return x.PlayerB
	}
	return 0
}

func (x *CreateFriendGameRequest) GetPlayerA() int32 {
	if x != nil {
		return x.PlayerA
	}
	return 0
}

type UpdateGameStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	State         string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGameStateRequest) Reset() {
	*x = UpdateGameStateRequest{}
	mi := &file_grpc_protos_game_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGameStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameStateRequest) ProtoMessage() {}

func (x *UpdateGameStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_game_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateGameStateRequest) Descriptor() ([]byte, []int) {
	return file_grpc_protos_game_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateGameStateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateGameStateRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

// Request to start a game
type StartGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        int32                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"` // ID of the game to start
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartGameRequest) Reset() {
	*x = StartGameRequest{}
	mi := &file_grpc_protos_game_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameRequest) ProtoMessage() {}

func (x *StartGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_game_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameRequest.ProtoReflect.Descriptor instead.
func (*StartGameRequest) Descriptor() ([]byte, []int) {
	return file_grpc_protos_game_proto_rawDescGZIP(), []int{9}
}

func (x *StartGameRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

// Response when starting a game
type StartGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                              // Whether the game successfully started
	WebsocketUrl  string                 `protobuf:"bytes,2,opt,name=websocket_url,json=websocketUrl,proto3" json:"websocket_url,omitempty"` // URL for WebSocket connection to get real-time updates
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartGameResponse) Reset() {
	*x = StartGameResponse{}
	mi := &file_grpc_protos_game_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameResponse) ProtoMessage() {}

func (x *StartGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_game_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameResponse.ProtoReflect.Descriptor instead.
func (*StartGameResponse) Descriptor() ([]byte, []int) {
	return file_grpc_protos_game_proto_rawDescGZIP(), []int{10}
}

func (x *StartGameResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartGameResponse) GetWebsocketUrl() string {
	if x != nil {
		return x.WebsocketUrl
	}
	return ""
}

// Request when receiving update about game completion
type GameFinishedRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GameId         int32                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                           // ID of the completed game
	PointsPlayerA  int32                  `protobuf:"varint,2,opt,name=points_player_a,json=pointsPlayerA,proto3" json:"points_player_a,omitempty"`    // Final points of player A
	PointsPlayerB  int32                  `protobuf:"varint,3,opt,name=points_player_b,json=pointsPlayerB,proto3" json:"points_player_b,omitempty"`    // Final points of player B
	WinnerPlayerId int32                  `protobuf:"varint,4,opt,name=winner_player_id,json=winnerPlayerId,proto3" json:"winner_player_id,omitempty"` // ID of the winning player (or 0 for a draw)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GameFinishedRequest) Reset() {
	*x = GameFinishedRequest{}
	mi := &file_grpc_protos_game_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameFinishedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFinishedRequest) ProtoMessage() {}

func (x *GameFinishedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_game_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFinishedRequest.ProtoReflect.Descriptor instead.
func (*GameFinishedRequest) Descriptor() ([]byte, []int) {
	return file_grpc_protos_game_proto_rawDescGZIP(), []int{11}
}

func (x *GameFinishedRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GameFinishedRequest) GetPointsPlayerA() int32 {
	if x != nil {
		return x.PointsPlayerA
	}
	return 0
}

func (x *GameFinishedRequest) GetPointsPlayerB() int32 {
	if x != nil {
		return x.PointsPlayerB
	}
	return 0
}

func (x *GameFinishedRequest) GetWinnerPlayerId() int32 {
	if x != nil {
		return x.WinnerPlayerId
	}
	return 0
}

var File_grpc_protos_game_proto protoreflect.FileDescriptor

var file_grpc_protos_game_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xce, 0x02, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x42, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2b, 0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x36,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x47, 0x6f, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x67,
	0x6f, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x44, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x47, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x22, 0x3e, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2b, 0x0a, 0x10, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x65,
	0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x22, 0xa8, 0x01, 0x0a, 0x13, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x12, 0x28, 0x0a, 0x10, 0x77,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x32, 0xd3, 0x05, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x47, 0x6f, 0x69,
	0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x47, 0x6f, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x60, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x67, 0x6f, 0x69,
	0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x12, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x22, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x12, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x30, 0x01, 0x12, 0x4d, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x25, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_protos_game_proto_rawDescOnce sync.Once
	file_grpc_protos_game_proto_rawDescData = file_grpc_protos_game_proto_rawDesc
)

func file_grpc_protos_game_proto_rawDescGZIP() []byte {
	file_grpc_protos_game_proto_rawDescOnce.Do(func() {
		file_grpc_protos_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_protos_game_proto_rawDescData)
	})
	return file_grpc_protos_game_proto_rawDescData
}

var file_grpc_protos_game_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_grpc_protos_game_proto_goTypes = []any{
	(*Game)(nil),                        // 0: transcendence.Game
	(*GameReadyRequest)(nil),            // 1: transcendence.GameReadyRequest
	(*GetGameRequest)(nil),              // 2: transcendence.GetGameRequest
	(*GetOnGoingGameByUserRequest)(nil), // 3: transcendence.GetOnGoingGameByUserRequest
	(*GetOngoingGamesRequest)(nil),      // 4: transcendence.GetOngoingGamesRequest
	(*GetOngoingGamesResponse)(nil),     // 5: transcendence.GetOngoingGamesResponse
	(*CreateGameRequest)(nil),           // 6: transcendence.CreateGameRequest
	(*CreateFriendGameRequest)(nil),     // 7: transcendence.CreateFriendGameRequest
	(*UpdateGameStateRequest)(nil),      // 8: transcendence.UpdateGameStateRequest
	(*StartGameRequest)(nil),            // 9: transcendence.StartGameRequest
	(*StartGameResponse)(nil),           // 10: transcendence.StartGameResponse
	(*GameFinishedRequest)(nil),         // 11: transcendence.GameFinishedRequest
	(*timestamppb.Timestamp)(nil),       // 12: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),               // 13: google.protobuf.Empty
}
var file_grpc_protos_game_proto_depIdxs = []int32{
	12, // 0: transcendence.Game.created_at:type_name -> google.protobuf.Timestamp
	12, // 1: transcendence.Game.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: transcendence.GetOngoingGamesResponse.games:type_name -> transcendence.Game
	2,  // 3: transcendence.GameService.GetGame:input_type -> transcendence.GetGameRequest
	3,  // 4: transcendence.GameService.GetOnGoingGameByUser:input_type -> transcendence.GetOnGoingGameByUserRequest
	4,  // 5: transcendence.GameService.GetOngoingGames:input_type -> transcendence.GetOngoingGamesRequest
	6,  // 6: transcendence.GameService.CreateGame:input_type -> transcendence.CreateGameRequest
	7,  // 7: transcendence.GameService.CreateFriendGame:input_type -> transcendence.CreateFriendGameRequest
	9,  // 8: transcendence.GameService.StartGame:input_type -> transcendence.StartGameRequest
	11, // 9: transcendence.GameService.HandleGameFinished:input_type -> transcendence.GameFinishedRequest
	1,  // 10: transcendence.GameService.GameReady:input_type -> transcendence.GameReadyRequest
	8,  // 11: transcendence.GameService.UpdateGameState:input_type -> transcendence.UpdateGameStateRequest
	0,  // 12: transcendence.GameService.GetGame:output_type -> transcendence.Game
	0,  // 13: transcendence.GameService.GetOnGoingGameByUser:output_type -> transcendence.Game
	5,  // 14: transcendence.GameService.GetOngoingGames:output_type -> transcendence.GetOngoingGamesResponse
	0,  // 15: transcendence.GameService.CreateGame:output_type -> transcendence.Game
	0,  // 16: transcendence.GameService.CreateFriendGame:output_type -> transcendence.Game
	10, // 17: transcendence.GameService.StartGame:output_type -> transcendence.StartGameResponse
	13, // 18: transcendence.GameService.HandleGameFinished:output_type -> google.protobuf.Empty
	0,  // 19: transcendence.GameService.GameReady:output_type -> transcendence.Game
	0,  // 20: transcendence.GameService.UpdateGameState:output_type -> transcendence.Game
	12, // [12:21] is the sub-list for method output_type
	3,  // [3:12] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_grpc_protos_game_proto_init() }
func file_grpc_protos_game_proto_init() {
	if File_grpc_protos_game_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_protos_game_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_protos_game_proto_goTypes,
		DependencyIndexes: file_grpc_protos_game_proto_depIdxs,
		MessageInfos:      file_grpc_protos_game_proto_msgTypes,
	}.Build()
	File_grpc_protos_game_proto = out.File
	file_grpc_protos_game_proto_rawDesc = nil
	file_grpc_protos_game_proto_goTypes = nil
	file_grpc_protos_game_proto_depIdxs = nil
}
