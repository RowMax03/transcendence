# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import settings_pb2 as settings__pb2


class SettingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateSetting = channel.unary_unary(
                '/models.SettingService/CreateSetting',
                request_serializer=settings__pb2.CreateSettingRequest.SerializeToString,
                response_deserializer=settings__pb2.Setting.FromString,
                )
        self.GetSettingById = channel.unary_unary(
                '/models.SettingService/GetSettingById',
                request_serializer=settings__pb2.GetSettingByIdRequest.SerializeToString,
                response_deserializer=settings__pb2.Setting.FromString,
                )
        self.GetSettingsByUserId = channel.unary_unary(
                '/models.SettingService/GetSettingsByUserId',
                request_serializer=settings__pb2.GetSettingsByUserIdRequest.SerializeToString,
                response_deserializer=settings__pb2.SettingsResponse.FromString,
                )


class SettingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateSetting(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSettingById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSettingsByUserId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SettingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateSetting': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSetting,
                    request_deserializer=settings__pb2.CreateSettingRequest.FromString,
                    response_serializer=settings__pb2.Setting.SerializeToString,
            ),
            'GetSettingById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSettingById,
                    request_deserializer=settings__pb2.GetSettingByIdRequest.FromString,
                    response_serializer=settings__pb2.Setting.SerializeToString,
            ),
            'GetSettingsByUserId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSettingsByUserId,
                    request_deserializer=settings__pb2.GetSettingsByUserIdRequest.FromString,
                    response_serializer=settings__pb2.SettingsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'models.SettingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SettingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateSetting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/models.SettingService/CreateSetting',
            settings__pb2.CreateSettingRequest.SerializeToString,
            settings__pb2.Setting.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSettingById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/models.SettingService/GetSettingById',
            settings__pb2.GetSettingByIdRequest.SerializeToString,
            settings__pb2.Setting.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSettingsByUserId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/models.SettingService/GetSettingsByUserId',
            settings__pb2.GetSettingsByUserIdRequest.SerializeToString,
            settings__pb2.SettingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
