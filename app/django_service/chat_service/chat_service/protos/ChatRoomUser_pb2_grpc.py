# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import ChatRoomUser_pb2 as ChatRoomUser__pb2


class ChatRoomUserServiceStub(object):
    """Service for ChatRoomUser-specific operations
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUsersByChatRoomId = channel.unary_unary(
                '/chat.ChatRoomUserService/GetUsersByChatRoomId',
                request_serializer=ChatRoomUser__pb2.GetUsersByChatRoomIdRequest.SerializeToString,
                response_deserializer=ChatRoomUser__pb2.ListChatRoomUsersResponse.FromString,
                )
        self.AddUserToChatRoom = channel.unary_unary(
                '/chat.ChatRoomUserService/AddUserToChatRoom',
                request_serializer=ChatRoomUser__pb2.AddUserToChatRoomRequest.SerializeToString,
                response_deserializer=ChatRoomUser__pb2.ChatRoomUser.FromString,
                )
        self.GetChatRoomByUser = channel.unary_unary(
                '/chat.ChatRoomUserService/GetChatRoomByUser',
                request_serializer=ChatRoomUser__pb2.GetChatRoomByUserIdRequest.SerializeToString,
                response_deserializer=ChatRoomUser__pb2.ListChatRoomUsersResponse.FromString,
                )


class ChatRoomUserServiceServicer(object):
    """Service for ChatRoomUser-specific operations
    """

    def GetUsersByChatRoomId(self, request, context):
        """Get users in a chat room
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddUserToChatRoom(self, request, context):
        """Add a user to a chat room
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChatRoomByUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatRoomUserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUsersByChatRoomId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsersByChatRoomId,
                    request_deserializer=ChatRoomUser__pb2.GetUsersByChatRoomIdRequest.FromString,
                    response_serializer=ChatRoomUser__pb2.ListChatRoomUsersResponse.SerializeToString,
            ),
            'AddUserToChatRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUserToChatRoom,
                    request_deserializer=ChatRoomUser__pb2.AddUserToChatRoomRequest.FromString,
                    response_serializer=ChatRoomUser__pb2.ChatRoomUser.SerializeToString,
            ),
            'GetChatRoomByUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChatRoomByUser,
                    request_deserializer=ChatRoomUser__pb2.GetChatRoomByUserIdRequest.FromString,
                    response_serializer=ChatRoomUser__pb2.ListChatRoomUsersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatRoomUserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatRoomUserService(object):
    """Service for ChatRoomUser-specific operations
    """

    @staticmethod
    def GetUsersByChatRoomId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatRoomUserService/GetUsersByChatRoomId',
            ChatRoomUser__pb2.GetUsersByChatRoomIdRequest.SerializeToString,
            ChatRoomUser__pb2.ListChatRoomUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddUserToChatRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatRoomUserService/AddUserToChatRoom',
            ChatRoomUser__pb2.AddUserToChatRoomRequest.SerializeToString,
            ChatRoomUser__pb2.ChatRoomUser.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChatRoomByUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatRoomUserService/GetChatRoomByUser',
            ChatRoomUser__pb2.GetChatRoomByUserIdRequest.SerializeToString,
            ChatRoomUser__pb2.ListChatRoomUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
