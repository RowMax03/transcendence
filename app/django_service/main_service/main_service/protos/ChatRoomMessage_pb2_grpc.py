# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import ChatRoomMessage_pb2 as ChatRoomMessage__pb2


class ChatRoomMessageServiceStub(object):
    """Service for ChatRoomMessage-specific operations
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMessagesByChatRoomId = channel.unary_unary(
                '/chat.ChatRoomMessageService/GetMessagesByChatRoomId',
                request_serializer=ChatRoomMessage__pb2.GetMessagesByChatRoomIdRequest.SerializeToString,
                response_deserializer=ChatRoomMessage__pb2.ListChatRoomMessagesResponse.FromString,
                )
        self.CreateMessage = channel.unary_unary(
                '/chat.ChatRoomMessageService/CreateMessage',
                request_serializer=ChatRoomMessage__pb2.CreateChatRoomMessageRequest.SerializeToString,
                response_deserializer=ChatRoomMessage__pb2.ChatRoomMessage.FromString,
                )


class ChatRoomMessageServiceServicer(object):
    """Service for ChatRoomMessage-specific operations
    """

    def GetMessagesByChatRoomId(self, request, context):
        """Get messages by chat room ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMessage(self, request, context):
        """Create a new chat room message
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatRoomMessageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMessagesByChatRoomId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessagesByChatRoomId,
                    request_deserializer=ChatRoomMessage__pb2.GetMessagesByChatRoomIdRequest.FromString,
                    response_serializer=ChatRoomMessage__pb2.ListChatRoomMessagesResponse.SerializeToString,
            ),
            'CreateMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMessage,
                    request_deserializer=ChatRoomMessage__pb2.CreateChatRoomMessageRequest.FromString,
                    response_serializer=ChatRoomMessage__pb2.ChatRoomMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatRoomMessageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatRoomMessageService(object):
    """Service for ChatRoomMessage-specific operations
    """

    @staticmethod
    def GetMessagesByChatRoomId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatRoomMessageService/GetMessagesByChatRoomId',
            ChatRoomMessage__pb2.GetMessagesByChatRoomIdRequest.SerializeToString,
            ChatRoomMessage__pb2.ListChatRoomMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatRoomMessageService/CreateMessage',
            ChatRoomMessage__pb2.CreateChatRoomMessageRequest.SerializeToString,
            ChatRoomMessage__pb2.ChatRoomMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
