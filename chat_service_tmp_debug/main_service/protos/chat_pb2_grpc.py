# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import chat_pb2 as chat__pb2

GRPC_GENERATED_VERSION = '1.69.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in chat_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ChatServiceStub(object):
    """ChatService definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateChatRoom = channel.unary_unary(
                '/chat.ChatService/CreateChatRoom',
                request_serializer=chat__pb2.CreateChatRoomRequest.SerializeToString,
                response_deserializer=chat__pb2.ChatRoom.FromString,
                _registered_method=True)
        self.GetChatRoomById = channel.unary_unary(
                '/chat.ChatService/GetChatRoomById',
                request_serializer=chat__pb2.GetChatRoomRequest.SerializeToString,
                response_deserializer=chat__pb2.ChatRoom.FromString,
                _registered_method=True)
        self.ListChatRooms = channel.unary_stream(
                '/chat.ChatService/ListChatRooms',
                request_serializer=chat__pb2.Empty.SerializeToString,
                response_deserializer=chat__pb2.ChatRoom.FromString,
                _registered_method=True)
        self.SubscribeChatRoomMessages = channel.unary_stream(
                '/chat.ChatService/SubscribeChatRoomMessages',
                request_serializer=chat__pb2.SubscribeChatRoomMessagesRequest.SerializeToString,
                response_deserializer=chat__pb2.ChatMessage.FromString,
                _registered_method=True)


class ChatServiceServicer(object):
    """ChatService definition
    """

    def CreateChatRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChatRoomById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListChatRooms(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeChatRoomMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateChatRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateChatRoom,
                    request_deserializer=chat__pb2.CreateChatRoomRequest.FromString,
                    response_serializer=chat__pb2.ChatRoom.SerializeToString,
            ),
            'GetChatRoomById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChatRoomById,
                    request_deserializer=chat__pb2.GetChatRoomRequest.FromString,
                    response_serializer=chat__pb2.ChatRoom.SerializeToString,
            ),
            'ListChatRooms': grpc.unary_stream_rpc_method_handler(
                    servicer.ListChatRooms,
                    request_deserializer=chat__pb2.Empty.FromString,
                    response_serializer=chat__pb2.ChatRoom.SerializeToString,
            ),
            'SubscribeChatRoomMessages': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeChatRoomMessages,
                    request_deserializer=chat__pb2.SubscribeChatRoomMessagesRequest.FromString,
                    response_serializer=chat__pb2.ChatMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('chat.ChatService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChatService(object):
    """ChatService definition
    """

    @staticmethod
    def CreateChatRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/CreateChatRoom',
            chat__pb2.CreateChatRoomRequest.SerializeToString,
            chat__pb2.ChatRoom.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetChatRoomById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/GetChatRoomById',
            chat__pb2.GetChatRoomRequest.SerializeToString,
            chat__pb2.ChatRoom.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListChatRooms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/chat.ChatService/ListChatRooms',
            chat__pb2.Empty.SerializeToString,
            chat__pb2.ChatRoom.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeChatRoomMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/chat.ChatService/SubscribeChatRoomMessages',
            chat__pb2.SubscribeChatRoomMessagesRequest.SerializeToString,
            chat__pb2.ChatMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ChatRoomUserServiceStub(object):
    """ChatRoomUserService definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUsersByChatRoomId = channel.unary_unary(
                '/chat.ChatRoomUserService/GetUsersByChatRoomId',
                request_serializer=chat__pb2.GetUsersByChatRoomIdRequest.SerializeToString,
                response_deserializer=chat__pb2.ListChatRoomUsersResponse.FromString,
                _registered_method=True)
        self.AddUserToChatRoom = channel.unary_unary(
                '/chat.ChatRoomUserService/AddUserToChatRoom',
                request_serializer=chat__pb2.AddUserToChatRoomRequest.SerializeToString,
                response_deserializer=chat__pb2.ChatRoomUser.FromString,
                _registered_method=True)
        self.GetChatRoomByUserId = channel.unary_unary(
                '/chat.ChatRoomUserService/GetChatRoomByUserId',
                request_serializer=chat__pb2.GetChatRoomByUserIdRequest.SerializeToString,
                response_deserializer=chat__pb2.ListChatRoomsResponse.FromString,
                _registered_method=True)


class ChatRoomUserServiceServicer(object):
    """ChatRoomUserService definition
    """

    def GetUsersByChatRoomId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddUserToChatRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChatRoomByUserId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatRoomUserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUsersByChatRoomId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsersByChatRoomId,
                    request_deserializer=chat__pb2.GetUsersByChatRoomIdRequest.FromString,
                    response_serializer=chat__pb2.ListChatRoomUsersResponse.SerializeToString,
            ),
            'AddUserToChatRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUserToChatRoom,
                    request_deserializer=chat__pb2.AddUserToChatRoomRequest.FromString,
                    response_serializer=chat__pb2.ChatRoomUser.SerializeToString,
            ),
            'GetChatRoomByUserId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChatRoomByUserId,
                    request_deserializer=chat__pb2.GetChatRoomByUserIdRequest.FromString,
                    response_serializer=chat__pb2.ListChatRoomsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatRoomUserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('chat.ChatRoomUserService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChatRoomUserService(object):
    """ChatRoomUserService definition
    """

    @staticmethod
    def GetUsersByChatRoomId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatRoomUserService/GetUsersByChatRoomId',
            chat__pb2.GetUsersByChatRoomIdRequest.SerializeToString,
            chat__pb2.ListChatRoomUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddUserToChatRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatRoomUserService/AddUserToChatRoom',
            chat__pb2.AddUserToChatRoomRequest.SerializeToString,
            chat__pb2.ChatRoomUser.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetChatRoomByUserId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatRoomUserService/GetChatRoomByUserId',
            chat__pb2.GetChatRoomByUserIdRequest.SerializeToString,
            chat__pb2.ListChatRoomsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ChatRoomMessageServiceStub(object):
    """ChatRoomMessageService definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMessagesByChatRoomId = channel.unary_unary(
                '/chat.ChatRoomMessageService/GetMessagesByChatRoomId',
                request_serializer=chat__pb2.GetMessagesByChatRoomIdRequest.SerializeToString,
                response_deserializer=chat__pb2.ListChatRoomMessagesResponse.FromString,
                _registered_method=True)
        self.CreateMessage = channel.unary_unary(
                '/chat.ChatRoomMessageService/CreateMessage',
                request_serializer=chat__pb2.CreateChatRoomMessageRequest.SerializeToString,
                response_deserializer=chat__pb2.ChatRoomMessage.FromString,
                _registered_method=True)


class ChatRoomMessageServiceServicer(object):
    """ChatRoomMessageService definition
    """

    def GetMessagesByChatRoomId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatRoomMessageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMessagesByChatRoomId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessagesByChatRoomId,
                    request_deserializer=chat__pb2.GetMessagesByChatRoomIdRequest.FromString,
                    response_serializer=chat__pb2.ListChatRoomMessagesResponse.SerializeToString,
            ),
            'CreateMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMessage,
                    request_deserializer=chat__pb2.CreateChatRoomMessageRequest.FromString,
                    response_serializer=chat__pb2.ChatRoomMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatRoomMessageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('chat.ChatRoomMessageService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChatRoomMessageService(object):
    """ChatRoomMessageService definition
    """

    @staticmethod
    def GetMessagesByChatRoomId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatRoomMessageService/GetMessagesByChatRoomId',
            chat__pb2.GetMessagesByChatRoomIdRequest.SerializeToString,
            chat__pb2.ListChatRoomMessagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatRoomMessageService/CreateMessage',
            chat__pb2.CreateChatRoomMessageRequest.SerializeToString,
            chat__pb2.ChatRoomMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
